#include<stdio.h> 

// Merges two subarrays of arr[].
// First subarray is arr[l..m]
// Second subarray is arr[m+1..r]
void merge(int arr[],int l,int m,int r)
{
    int i,j,k; 
    int n1=m-l+1;
    int n2=r-m;
    /* create temp arrays */
    int L[n1],R[n2];
    //Copy data to temp arrays L[] and R[]
    for(i=0;i<n1;i++)
    {
        L[i]=arr[l+i];
    }
    for(j=0;j<n2;j++)
    {
        R[j]=arr[m+1+j];
    }
    //Merge the temp arrays back into arr[l..r]
    i=0,j=0,k=l;
    while(i<n1&&j<n2)
    {
        if(L[i]<=R[j])
        {
            arr[k]=L[i];
            i++;
        }
        else 
        {
            arr[k]=R[j];
            j++;
        }
        k++;
    }
    //copy remining element of L array 
    while(i<n1)
    {
        arr[k]=L[i];
        i++;
        k++;
    }
    //copy remaining element of R array 
    while(j<n2)
    {
        arr[k]=R[j]; 
        j++;
        k++;
    }
    
}void mergesort(int arr[],int l,int r)
{
    if(l<r)
    {int m=l+(r-l)/2; 
        mergesort(arr,l,m);
        mergesort(arr,m+1,r);
        merge(arr,l,m,r);
    }
}
void display(int arr[],int n)
{
    int i; 
    for(i=0;i<n;i++)
    {
        printf("%d ",arr[i]);
    }
}
int main()
{
    int size;
    scanf("%d",&size); 
    int arr[size]; 
    int i; 
    for(i=0;i<size;i++)
    {
        scanf("%d",&arr[i]);
    }
    mergesort(arr,0,size-1);
    display(arr,size);
    
}
