//quicksort alogarithm 
#include<stdio.h> 
void display(int arr[],int n)
{
    int i; 
    for(i=0;i<n;i++)
    {
        printf("%d ",arr[i]);
    }
}
void swap(int *a,int *b)
{
    int temp=*a; 
    *a=*b;
    *b=temp;
}
int partition(int arr[],int start,int end) //arr,start=0,end=3 
{
    int pivot=arr[end]; 
    int i=start-1; 
    while(start<=end-1)
    {
        if(arr[start]<pivot)
        {
            i++;
            swap(&arr[i],&arr[start]);
        
        }
        start++;
    }
swap(&arr[i+1],&arr[end]); 
    return (i+1);  //3 
}
void quicksort(int arr[],int start,int end)  //arr ,start=0 , end= 3 
{
    if(start<end) //0<3 
    {
       int pi=partition(arr,start,end); //pi=4 
       quicksort(arr,start,pi-1); 
       quicksort(arr,pi+1,end);
    }
}
int main()
{
    int size;
    scanf("%d",&size); 
    int arr[size];
    for(int i=0;i<size;i++)
    {
        scanf("%d",&arr[i]); 
    }
    quicksort(arr,0,size-1);
    display(arr,size);
}
